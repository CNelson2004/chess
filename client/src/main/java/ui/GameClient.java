package ui;

import java.util.Arrays;

public class GameClient implements EvalClient {
    private final ServerFacade server;
    protected static String color;
    protected static String username;
    private String currentCMD = "";

    public GameClient(int port) {
        server = new ServerFacade(port);
    }

    public static void setColor(String value){color = value;}
    public static void setUsername(String value){username = value;}

    public String eval(String input) throws ResponseException{
        //try {}
            var tokens = input.toLowerCase().split(" ");
            var cmd = (tokens.length > 0) ? tokens[0] : "help";
            var params = Arrays.copyOfRange(tokens, 1, tokens.length);

            return switch (cmd) {
                case "quit" -> "quit";
                case "draw" -> draw();
                case "back" -> "Transitioning to main page";
                default -> help();
            };
        //catch{}
        //waiting for next phase
    }

    public String draw(){
        if (color.equals("WHITE")) {
            Draw.drawBoard();
        } else if (color.equals("BLACK")) {
            Draw.drawBoardBlack();
        } else {
            System.out.print("Error occurred, couldn't find player color.");
        }
        return "";
    }

    public String redraw(){
        //redraws board in current state at user's request
        //only effects player
        return null;}

    public String leave(){
        //User leaves the game
        //return to post login UI
        //someone can take their place
        return null;}

    public String makeMove(){
        //User inputs what move they want to make
        //make sure it''s their turn
        //update board for player
        //update all clients looking at board
        return null;}

    public String resign(){
        //double checks if user wants to resign
        //end game with player losing
        //player doesn't leave game
        return null;}

    public String highlightMoves(){
        //User inputs piece for which they want to highlight legal moves
        //That pieces current square and all legal move squares light up
        //Effects only player, not any observers or opponents.
        return null;}

    public void notification(){
        //Display on the all screens, all players and observers
        //Events to notify
        //User connects to game (user name and color)
        //User connects as observer (user name)
        //Player made a move (user name and move description)
        //Player left the game (user name)
        //Player resigned (user name)
        //Player is in check (player name) [notif generated by server]
        //Player is in checkmate (player name) [notif by server]
        //The rest aare from client to server
    }

    public String help(){
        return """
                * back - return to main screen
                * help - list commands
                * redraw - redraws chess board
                * move - make a chess move
                * resign - forfiet game
                * highlight - highlights legal moves
                """;
    }
}
